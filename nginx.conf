events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    sendfile on;

    # Enable more detailed error logging
    error_log /var/log/nginx/error.log debug;

    # Main domain configuration
    server {
        listen 80;
        server_name m.erp.com;

        location / {
            return 200 'Main ERP domain';
        }
    }

    # User Service (HTTP)
    server {
        listen 80;
        server_name users.m.erp.com;

        location / {
            proxy_pass http://user_service:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add timeout settings
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }
    }

    # User Service (HTTPS)
    # server {
    #     listen 443 ssl;
    #     server_name users.m.erp.com;

    #     ssl_certificate /etc/nginx/ssl/certificate.crt;
    #     ssl_certificate_key /etc/nginx/ssl/private.key;
    #     location / {
    #         proxy_pass http://user_service:5001;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         # Add timeout settings
    #         proxy_connect_timeout 300;
    #         proxy_send_timeout 300;
    #         proxy_read_timeout 300;
    #         # Enable HTTP/2 support for gRPC
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #     }
    # }
    server {
        listen 443 ssl http2;
        server_name users.m.erp.com;

        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        location / {
            grpc_pass grpcs://user_service:5001; # Ensure it's grpcs (gRPC over SSL)
            error_page 502 = /error502grpc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Add timeout settings
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # Error handling for gRPC
        location = /error502grpc {
            internal;
            default_type application/grpc;
            return 502;
        }
    }


    # Employee Service
    server {
        listen 80;
        server_name employees.m.erp.com;

        location / {
            proxy_pass http://employee_service:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add timeout settings
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }
    }

    # Auth Service (Keycloak)
    server {
        listen 80;
        server_name auth.m.erp.com;

        location / {
            proxy_pass http://keycloak:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # RabbitMQ Management UI
    server {
        listen 80;
        server_name rabbitmq.m.erp.com;

        location / {
            proxy_pass http://rabbitmq:15672;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
